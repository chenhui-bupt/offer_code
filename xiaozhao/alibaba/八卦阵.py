"""
20
20
34  0   0   0   0   0   0   0   0   0   0   0   0   0   0   10  0   0   0   30
0   23  10  5   5   0   0   0   5   5   5   5   5   0   0   0   30  0   40  0
0   9   0   0   5   0   0   0   4   4   4   4   4   0   0   0   0   30  0   0
0   8   7   7   0   5   0   0   3   3   3   3   0   0   0   0   7   0   9   0
0   9   0   0   5   0   5   0   0   12  12  0   0   0   0   10  0   0   0   9
0   0   0   0   5   0   0   5   0   12  12  0   0   5   0   0   0   0   0   0
0   0   0   0   0   0   0   0   0   12  12  0   0   5   0   0   0   0   0   0
0   0   0   0   0   0   0   0   0   0   0   0   0   5   0   0   0   0   0   0
0   0   0   0   0   0   0   0   0   0   0   0   0   5   0   0   0   0   0   0
40  30  3   6   6   0   0   0   0   0   0   0   0   5   5   0   0   0   10  0
0   0   20  0   0   6   6   0   0   0   0   0   0   0   5   6   5   10  10  0
40  30  3   7   6   0   0   0   0   0   0   0   0   0   0   6   0   0   10  0
0   0   0   0   0   0   0   17  0   0   0   0   17  0   0   6   5   7   7   0
0   0   0   0   0   0   0   0   7   0   0   7   0   0   0   0   0   0   0   0
0   20  0   0   7   0   0   0   0   4   4   0   0   0   0   0   10  0   0   0
0   20  0   0   7   0   0   0   0   4   4   0   0   0   0   0   10  0   0   0
0   20  0   0   7   0   0   0   0   4   4   0   0   0   0   0   10  0   0   0
0   30  0   7   0   0   0   0   0   5   5   0   0   0   0   0   0   10  0   50
0   40  7   0   0   0   0   0   0   5   5   0   0   0   0   0   0   0   50  0
43  30  25  10  50  0   0   0   6   6   6   6   0   0   0   0   0   50  0   0
"""
mat = [[34,0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10,0, 0, 0, 30],
        [0, 23,10,5, 5, 0, 0, 0, 5, 5, 5, 5, 5, 0, 0, 0, 30,0, 40,0],
        [0, 9, 0, 0, 5, 0, 0, 0, 4, 4, 4, 4, 4, 0, 0, 0, 0, 30,0, 0],
        [0, 8, 7, 7, 0, 5, 0, 0, 3, 3, 3, 3, 0, 0, 0, 0, 7, 0, 9, 0],
        [0, 9, 0, 0, 5, 0, 5, 0, 0, 12,12,0, 0, 0, 0, 10,0, 0, 0, 9],
        [0, 0, 0, 0, 5, 0, 0, 5, 0, 12,12,0, 0, 5, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 12,12,0, 0, 5, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0],
        [40,30,3, 6, 6, 0, 0, 0, 0, 0, 0, 0, 0, 5, 5, 0, 0, 0, 10,0],
        [0, 0, 20,0, 0, 6, 6, 0, 0, 0, 0, 0, 0, 0, 5, 6, 5, 10,10,0],
        [40,30,3, 7, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6, 0, 0, 10,0],
        [0, 0, 0, 0, 0, 0, 0, 17,0, 0, 0, 0, 17,0, 0, 6, 5, 7, 7, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 7, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 20,0, 0, 7, 0, 0, 0, 0, 4, 4, 0, 0, 0, 0, 0, 10,0, 0, 0],
        [0, 20,0, 0, 7, 0, 0, 0, 0, 4, 4, 0, 0, 0, 0, 0, 10,0, 0, 0],
        [0, 20,0, 0, 7, 0, 0, 0, 0, 4, 4, 0, 0, 0, 0, 0, 10,0, 0, 0],
        [0, 30,0, 7, 0, 0, 0, 0, 0, 5, 5, 0, 0, 0, 0, 0, 0, 10,0, 50],
        [0, 40,7, 0, 0, 0, 0, 0, 0, 5, 5, 0, 0, 0, 0, 0, 0, 0, 50,0],
        [43,30,25,10,50,0, 0, 0, 6, 6, 6, 6, 0, 0, 0, 0, 0, 50,0, 0]]
m, n= 20, 20
def find(mat, i, j, m, n, visited, res):
    if 0 <= i < m and 0 <= j < n and mat[i][j] and not visited[i][j]:
        if i==1 and j == 3:
            aaa = 1
        visited[i][j] = 1
        res[0] += mat[i][j]
        print(i, ",", j,",", "mat", mat[i][j], visited[2][4])
        find(mat, i - 1, j, m, n, visited, res)
        find(mat, i + 1, j, m, n, visited, res)
        find(mat, i, j + 1, m, n, visited, res)
        find(mat, i, j - 1, m, n, visited, res)
        find(mat, i - 1, j - 1, m, n, visited, res)
        find(mat, i - 1, j + 1, m, n, visited, res)
        find(mat, i + 1, j + 1, m, n, visited, res)
        find(mat, i + 1, j - 1, m, n, visited, res)
        print("res", res[0])

maxNum = 0
minNum = sum([sum(x) for x in mat])
print(minNum)
#
# res = [0]
# visited = [[0 for i in range(n)] for j in range(m)]
# find(mat, 0, 0, m, n, visited, res)
# print(res[0])
# exit(0)
for i in range(m):
    for j in range(n):
        res = [0]
        visited = [[0 for i in range(n)] for j in range(m)]
        find(mat, i, j, m, n, visited, res)
        if res[0] > maxNum:
            maxNum = res[0]
        if res[0] > 0 and res[0] < minNum:
            minNum = res[0]
print(maxNum, minNum)


