# -*- coding:utf-8 -*-
"""
我们先将所有人按花费时间递增进行排序，假设前i个人过河花费的最少时间为dp[i]，
1. 那么考虑前i-1个人过河的情况，即河这边还剩1个人，河那边已过去i-1个人，并且这时候手电筒肯定在对岸，
所以dp[i] = dp[i-1] + a[1] + a[i] (让花费时间最少的人把手电筒送过来，然后和第i个人一起过河)
2. 如果河这边还有两个人，一个是第i号，另外一个无所谓，河那边已过去i-2个人，并且手电筒肯定在对岸，
所以dp[i] = dp[i-2] + a[1] + a[i] + 2*a[2] (让花费时间最少的人把电筒送过来，然后第i个人和另外一个人一起过河，
由于花费时间最少的人在这边，所以下一次送手电筒过来的一定是花费次少的，送过来后花费最少的和花费次少的一起过河，解决问题)
所以 dp[i] = min{dp[i-1] + a[1] + a[i] , dp[i-2] + a[1] + a[i] + 2*a[2] }
"""
t = [1, 2, 5, 10]
t.sort()
dp = [0] * (len(t) + 1)
dp[1] = t[0]
dp[2] = t[1]
for i in range(3, len(dp)):
    dp[i] = min(dp[i-1] + t[i-1] + t[0], dp[i-2] + t[i-1] + t[0] + 2 * t[1])
print(dp)
print(dp[4])
